procedure a {
	a1 = 2+3;
	a3 = a2 / a4;
	while (a2 != 0) {
		read a5;
		a7 = a6 * 120;
		if (a6 == a6) then {
			print a8;
			read a7;
		} else {
			a9 = a10;
		}
		call b;
	}
}
procedure b {
	b1 = 2+3;
	b3 = b2 / b4;
	while (b2 != 0) {
		read b5;
		b7 = b6 * 120;
		if (b6 == b6) then {
			print b8;
			read b7;
		} else {
			b9 = b10;
		}
		call c;
	}
}
procedure c {
	c1 = 2+3;
	c3 = c2 / c4;
	while (c2 != 0) {
		read c5;
		c7 = c6 * 120;
		if (c6 == c6) then {
			print c8;
			read c7;
		} else {
			c9 = c10;
		}
		call d;
	}
}
procedure d {
	d1 = 2+3;
	d3 = d2 / d4;
	while (d2 != 0) {
		read d5;
		d7 = d6 * 120;
		if (d6 == d6) then {
			print d8;
			read d7;
		} else {
			d9 = d10;
		}
		call e;
	}
}
procedure e {
	e1 = 2+3;
	e3 = e2 / e4;
	while (e2 != 0) {
		read e5;
		e7 = e6 * 120;
		if (e6 == e6) then {
			print e8;
			read e7;
		} else {
			e9 = e10;
		}
		call f;
	}
}
procedure f {
	f1 = 2+3;
	f3 = f2 / f4;
	while (f2 != 0) {
		read f5;
		f7 = f6 * 120;
		if (f6 == f6) then {
			print f8;
			read f7;
		} else {
			f9 = f10;
		}
		call g;
	}
}
procedure g {
	g1 = 2+3;
	g3 = g2 / g4;
	while (g2 != 0) {
		read g5;
		g7 = g6 * 120;
		if (g6 == g6) then {
			print g8;
			read g7;
		} else {
			g9 = g10;
		}
		call i;
	}
}
procedure i {
	i1 = 2+3;
	i3 = i2 / i4;
	while (i2 != 0) {
		read i5;
		i7 = i6 * 120;
		if (i6 == i6) then {
			print i8;
			read i7;
		} else {
			i9 = i10;
		}
		call j;
	}
}
procedure j {
	j1 = 2+3;
	j3 = j2 / j4;
	while (j2 != 0) {
		read j5;
		j7 = j6 * 120;
		if (j6 == j6) then {
			print j8;
			read j7;
		} else {
			j9 = j10;
		}
	}
}