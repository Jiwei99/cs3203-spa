1 - No shared synonym v1
call c; read r; stmt s, s1;
Select <c> with c.procName = r.varName such that Follows(s, s1)
print
5000
2 - No shared synonym v2
call c; read r;
Select <r, c> with c.procName = r.varName such that Follows*(1, 3)
10 1
5000
3 - No shared synonym v3
call c; read r; stmt s; procedure p;
Select <c, c.procName, r.varName, p> with c.procName = r.varName such that Follows*(1, s)
1 print print call, 1 print print print
5000
4 - 1 shared synonym v1
print pn; procedure p, p1; assign a;
Select <p1, a.stmt#> with pn.varName = p.procName such that Uses(pn, "print")
call 7, print 7
5000
5 - 1 shared synonym v2
print pn; procedure p;
Select <pn, pn> with pn.varName = p.procName such that Uses(pn, _)
11 11
5000
6 - 1 shared synonym v3
while w; stmt s; read r;
Select <r, r.varName, r.varName, r> with r.varName = "k" such that Parent(w, r) and Follows(w, s)
9 k k 9
5000
7 - 1 shared synonym v4
while w; stmt s; read r;
Select <w, s> with r.varName = "print" such that Parent(w, r) and Follows(w, s)
8 10, 8 11, 8 12
5000
8 - 1 shared synonym v5
while w; read r; assign a; procedure p;
Select <p.procName, p> such that Parent(w, r) such that Follows(a,w) with r.varName = "k"
call call, print print
5000
9 - 1 shared synonym v5.1
while w; read r; assign a;
Select <w> such that Parent(w, r) such that Follows(6,w) with r.varName = "k"
none
5000
10 - 2 shared synonym v1
while w; stmt s, s1; print pn; variable v; read r;
Select <s1.stmt#> with pn.varName = v.varName such that Uses("call", v) and Follows*(8, 10) with v.varName = r.varName such that Follows(pn, s1)
12
5000
11 - 2 shared synonym v2
print pn; variable v; assign a; stmt s;
Select <s, pn.stmt#> with pn.varName = v.varName such that Parent(s, pn) and Uses(a,v)
3 4
5000
12 - 2 shared synonym v3
while w; stmt s; print pn; variable v;
Select <w, pn.varName> such that Follows*(w, pn) with pn.varName = v.varName such that Uses("call", v)
8 print, 8 extra
5000
13 - 2 shared synonym v4
print pn; variable v; read r;
Select <r, r, pn, pn.stmt#, v> such that Modifies(r, v) with r.varName = pn.varName such that Uses(pn, v)
10 10 11 11 print
5000
14 - Syntactically Invalid
print pn; variable v; read r;
Select <> such that Modifies(r, v) and Uses(pn, v) and r.varName = pn.varName
SyntaxError
5000
15 - Syntactically Invalid
print pn; variable v; read r;
Select <> such that Modifies(r, v) and Uses(pn, v) such that r.varName = pn.varName
SyntaxError
5000
16 - Syntactically Invalid
print pn; variable v; read r; assign a;
Select <> such that Modifies(r, v) pattern a ("call",_) and r.varName = pn.varName
SyntaxError
5000
17 - SemanticError - BOOLEAN in tuple/undefined synonym
print pn; variable v; read r;
Select <r, BOOLEAN> such that Modifies(r, v) with r.varName = pn.varName such that Uses(pn, v)
SemanticErrorr
5000